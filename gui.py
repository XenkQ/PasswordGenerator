# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
# And then edited and refectored by xenkq

from pathlib import Path
from password import CHARACTERS_BAD_FOR_PASSWORD, Password

# Explicit imports to satisfy Flake8
from tkinter import *

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("img")

APP_NAME = "Password Generator"

COUNT_ENTRY_MIN_VALUE_LIMIT = 0
COUNT_ENTRY_MAX_VALUE_LIMIT = 64

DEFAULT_ENTRY_STYLE_KWARGS = {
    'bd': 0,
    'fg': '#FFFFFF',
    'highlightthickness': 0,
    'font': ('Arial', 14),
    'insertbackground': "white"
}


class GUI:
    def __init__(self):
        self.window = Tk()
        self.window.geometry("800x600")
        self.window.configure(bg="#B8E994")
        self.window.resizable(False, False)
        self.window.title(APP_NAME)

        self.upper_az_count_entry_var = IntVar()
        self.lower_az_count_entry_var = IntVar()
        self.digits_count_entry_var = IntVar()
        self.special_characters_count_entry_var = IntVar()

        canvas = Canvas(
            self.window,
            bg="#B8E994",
            height=600,
            width=800,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        increase_button_image = PhotoImage(file=self.relative_to_images("button_4.png"))
        decrease_button_image = PhotoImage(file=self.relative_to_images("button_5.png"))

        canvas.place(x=0, y=0)
        entry_image_1 = PhotoImage(
            file=self.relative_to_images("entry_1.png"))

        canvas.create_image(
            351.0,
            60.0,
            image=entry_image_1,
        )

        self.password_entry = Entry(
            **DEFAULT_ENTRY_STYLE_KWARGS,
            bg="#78E08F"
        )

        self.password_entry.place(
            x=62.0,
            y=44.0,
            width=578.0,
            height=30.0
        )

        image_image_1 = PhotoImage(
            file=self.relative_to_images("image_1.png"))

        canvas.create_image(
            399.0,
            329.0,
            image=image_image_1
        )

        image_image_2 = PhotoImage(
            file=self.relative_to_images("image_2.png"))

        canvas.create_image(
            399.0,
            343.0,
            image=image_image_2
        )

        button_image_1 = PhotoImage(
            file=self.relative_to_images("button_1.png"))

        generate_password_button = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.on_generate_password_button_click(),
            relief="flat"
        )

        generate_password_button.place(
            x=663.0,
            y=40.0,
            width=40.0,
            height=40.0
        )

        button_image_2 = PhotoImage(
            file=self.relative_to_images("button_2.png"))

        copy_password_button = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_2 clicked"),
            relief="flat"
        )

        copy_password_button.place(
            x=712.0,
            y=40.0,
            width=40.0,
            height=40.0
        )

        button_image_3 = PhotoImage(
            file=self.relative_to_images("button_3.png"))

        exit_button = Button(
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: exit(0),
            relief="flat"
        )

        exit_button.place(
            x=67.0,
            y=498.0,
            width=99.0,
            height=40.0
        )

        canvas.create_text(
            67.0,
            125.0,
            anchor="nw",
            text="Password strength: no input",
            fill="#3C6382",
            font=("Inter", 18 * -1)
        )

        entry_image_2 = PhotoImage(
            file=self.relative_to_images("entry_2.png"))

        canvas.create_image(
            425.5,
            395.0,
            image=entry_image_2
        )

        self.exclude_entry = Entry(
            **DEFAULT_ENTRY_STYLE_KWARGS,
            bg="#38ADA9"
        )
        
        self.exclude_entry.place(
            x=178.0,
            y=380.0,
            width=495.0,
            height=28.0
        )

        entry_image_3 = PhotoImage(
            file=self.relative_to_images("entry_3.png"))

        canvas.create_image(
            217.5,
            321.0,
            image=entry_image_3
        )

        self.upper_az_count_entry = Entry(
            **DEFAULT_ENTRY_STYLE_KWARGS,
            bg="#38ADA9",
            justify="right"
        )

        self.upper_az_count_entry.place(
            x=178.0,
            y=311.0,
            width=79.0,
            height=18.0
        )

        image_image_3 = PhotoImage(
            file=self.relative_to_images("image_3.png"))

        canvas.create_image(
            215.0,
            321.0,
            image=image_image_3
        )

        upper_az_count_increment_button = Button(
            image=increase_button_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.increase_count_entry_value(self.upper_az_count_entry),
            relief="flat"
        )

        upper_az_count_increment_button.place(
            x=257.0,
            y=306.0,
            width=16.0,
            height=15.0
        )

        upper_az_count_decrement_button = Button(
            image=decrease_button_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.decrease_count_entry_value(self.upper_az_count_entry),
            relief="flat"
        )

        upper_az_count_decrement_button.place(
            x=257.0,
            y=321.0,
            width=16.0,
            height=15.0
        )

        entry_image_4 = PhotoImage(
            file=self.relative_to_images("entry_3.png"))

        canvas.create_image(
            330.5,
            321.0,
            image=entry_image_4
        )

        self.lower_az_count_entry = Entry(
            **DEFAULT_ENTRY_STYLE_KWARGS,
            bg="#38ADA9",
            justify="right"
        )

        self.lower_az_count_entry.place(
            x=291.0,
            y=311.0,
            width=79.0,
            height=18.0
        )

        image_image_4 = PhotoImage(
            file=self.relative_to_images("image_3.png"))

        canvas.create_image(
            328.0,
            321.0,
            image=image_image_4
        )

        lower_az_count_increment_button = Button(
            image=increase_button_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.increase_count_entry_value(self.lower_az_count_entry),
            relief="flat"
        )

        lower_az_count_increment_button.place(
            x=370.0,
            y=306.0,
            width=16.0,
            height=15.0
        )

        lower_az_count_decrement_button = Button(
            image=decrease_button_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.decrease_count_entry_value(self.lower_az_count_entry),
            relief="flat"
        )

        lower_az_count_decrement_button.place(
            x=370.0,
            y=321.0,
            width=16.0,
            height=15.0
        )

        entry_image_5 = PhotoImage(
            file=self.relative_to_images("entry_3.png"))

        canvas.create_image(
            445.5,
            321.0,
            image=entry_image_5
        )

        self.digits_count_entry = Entry(
            **DEFAULT_ENTRY_STYLE_KWARGS,
            bg="#38ADA9",
            justify="right"
        )

        self.digits_count_entry.place(
            x=406.0,
            y=311.0,
            width=79.0,
            height=18.0
        )

        image_image_5 = PhotoImage(
            file=self.relative_to_images("image_3.png"))

        canvas.create_image(
            443.0,
            321.0,
            image=image_image_5
        )

        digits_count_increase_button = Button(
            image=increase_button_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.increase_count_entry_value(self.digits_count_entry),
            relief="flat"
        )

        digits_count_increase_button.place(
            x=485.0,
            y=306.0,
            width=16.0,
            height=15.0
        )

        digits_count_decrease_button = Button(
            image=decrease_button_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.decrease_count_entry_value(self.digits_count_entry),
            relief="flat"
        )

        digits_count_decrease_button.place(
            x=485.0,
            y=321.0,
            width=16.0,
            height=15.0
        )

        entry_image_6 = PhotoImage(
            file=self.relative_to_images("entry_6.png"))

        canvas.create_image(
            591.0,
            321.0,
            image=entry_image_6
        )

        self.special_characters_count_entry = Entry(
            **DEFAULT_ENTRY_STYLE_KWARGS,
            bg="#38ADA9",
            justify="right"
        )

        self.special_characters_count_entry.place(
            x=520.0,
            y=311.0,
            width=142.0,
            height=18.0
        )

        image_image_6 = PhotoImage(
            file=self.relative_to_images("image_6.png"))

        canvas.create_image(
            588.0,
            321.0,
            image=image_image_6
        )

        special_character_count_increase_button = Button(
            image=increase_button_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.increase_count_entry_value(self.special_characters_count_entry),
            relief="flat"
        )

        special_character_count_increase_button.place(
            x=662.0,
            y=306.0,
            width=16.0,
            height=15.0
        )

        special_character_count_decrease_button = Button(
            image=decrease_button_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.decrease_count_entry_value(self.special_characters_count_entry),
            relief="flat"
        )

        special_character_count_decrease_button.place(
            x=662.0,
            y=321.0,
            width=16.0,
            height=15.0
        )

        canvas.create_text(
            67.0,
            185.0,
            anchor="nw",
            text="Char options",
            fill="#3C6382",
            font=("Inter", 20 * -1)
        )

        canvas.create_text(
            99.0,
            384.0,
            anchor="nw",
            text="Exclude",
            fill="#3C6382",
            font=("Inter", 18 * -1)
        )

        canvas.create_text(
            115.0,
            308.0,
            anchor="nw",
            text="Count",
            fill="#3C6382",
            font=("Inter", 18 * -1)
        )

        image_image_7 = PhotoImage(
            file=self.relative_to_images("image_7.png"))

        canvas.create_image(
            223.0,
            287.0,
            image=image_image_7
        )

        canvas.create_text(
            208.0,
            276.0,
            anchor="nw",
            text="A-Z",
            fill="#3C6382",
            font=("Inter", 18 * -1)
        )

        image_image_8 = PhotoImage(
            file=self.relative_to_images("image_7.png"))

        canvas.create_image(
            336.0,
            287.0,
            image=image_image_8
        )

        canvas.create_text(
            325.0,
            276.0,
            anchor="nw",
            text="a-z",
            fill="#3C6382",
            font=("Inter", 18 * -1)
        )

        image_image_9 = PhotoImage(
            file=self.relative_to_images("image_7.png"))
        canvas.create_image(
            451.0,
            287.0,
            image=image_image_9
        )

        canvas.create_text(
            439.0,
            276.0,
            anchor="nw",
            text="0-9",
            fill="#3C6382",
            font=("Inter", 18 * -1)
        )

        image_image_10 = PhotoImage(
            file=self.relative_to_images("image_10.png"))

        canvas.create_image(
            596.0,
            287.0,
            image=image_image_10
        )

        canvas.create_text(
            523.0,
            276.0,
            anchor="nw",
            text="Special characters",
            fill="#3C6382",
            font=("Inter", 18 * -1)
        )
        
        self.set_default_values_for_widgets()
        self.on_generate_password_button_click()
        
        self.window.mainloop()
        
    def set_default_values_for_widgets(self):
        self.lower_az_count_entry.insert(0, '3')
        self.upper_az_count_entry.insert(0, '3')
        self.digits_count_entry.insert(0, '3')
        self.special_characters_count_entry.insert(0, '3')
        self.exclude_entry.insert(0, CHARACTERS_BAD_FOR_PASSWORD)

    def relative_to_images(self, path: str) -> Path:
        return ASSETS_PATH / Path(path)

    def increase_count_entry_value(self, entry: Entry):
        val = self.get_number_from_entry(entry) + 1
    
        if val > COUNT_ENTRY_MAX_VALUE_LIMIT:
                return
    
        entry.delete(0, END)
        entry.insert(0, f"{val}")

    def decrease_count_entry_value(self, entry: Entry):
        val = self.get_number_from_entry(entry) - 1

        if val < COUNT_ENTRY_MIN_VALUE_LIMIT:
            return

        entry.delete(0, END)
        entry.insert(0, f"{val}")


    def get_number_from_entry(self, entry: Entry) -> int:
        """
        Get int value from entry, if value can't be cast to int return 0
        :param entry:
        :return:
        """
        try:
            return int(entry.get())

        except ValueError:
            return 0

    def set_entry_value(self, entry: Entry, val):
        entry.delete(0, END)
        entry.insert(0, f"{val}")

    def on_generate_password_button_click(self):
        pwd = Password.generate_password(
            self.get_number_from_entry(self.lower_az_count_entry),
            self.get_number_from_entry(self.upper_az_count_entry),
            self.get_number_from_entry(self.digits_count_entry),
            self.get_number_from_entry(self.special_characters_count_entry),
            self.exclude_entry.get()
        )

        self.set_entry_value(self.password_entry, pwd)
